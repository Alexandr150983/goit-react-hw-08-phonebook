{"version":3,"file":"static/js/129.a4ec7101.chunk.js","mappings":"wQAqEA,UAxDkB,WAChB,IAAAA,GAKIC,EAAAA,EAAAA,MAJFC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAKJ,EAALI,MACaC,EAAML,EAAnBM,UAAaD,OAETE,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,KAAK,QACLC,EAAE,SACFC,EAAG,EACHC,YAAY,MACZC,aAAa,KACbC,UAAU,KACVC,QAAQ,QAAOC,UAEfC,EAAAA,EAAAA,MAAA,QAAMC,SAAUjB,GAfH,SAAAkB,GACfd,GAASe,EAAAA,EAAAA,IAAWD,IACpBjB,GACF,IAY2Cc,SAAA,EACrCC,EAAAA,EAAAA,MAACI,EAAAA,GAAW,CAACC,YAAU,EAACC,UAAWpB,EAAOqB,MAAMR,SAAA,EAC9CT,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAAAT,SAAC,WACXT,EAAAA,EAAAA,KAACmB,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA3B,EAAS,QAAS,CAAE4B,UAAU,KAAO,IACzCC,KAAK,QACLC,YAAY,YAEdvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAf,SACdb,EAAOqB,OAAS,+BAGrBP,EAAAA,EAAAA,MAACI,EAAAA,GAAW,CAACC,YAAU,EAACC,UAAWpB,EAAO6B,SAAUC,GAAI,EAAEjB,SAAA,EACxDT,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAAAT,SAAC,cACXT,EAAAA,EAAAA,KAACmB,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA3B,EAAS,WAAY,CAAE4B,UAAU,EAAMM,UAAW,KAAI,IAC1DL,KAAK,WACLC,YAAY,eAEdvB,EAAAA,EAAAA,KAACwB,EAAAA,GAAgB,CAAAf,SACdb,EAAO6B,UACN,mEAGNzB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,CAACN,KAAK,SAASO,YAAY,OAAOH,GAAI,EAAEjB,SAAC,gBAMxD,C","sources":["Pages/Login.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/Auth/operations';\nimport {\n  Box,\n  Button,\n  Input,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n} from '@chakra-ui/react';\n\nconst LoginPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(loginThunk(data));\n    reset();\n  };\n\n  return (\n    <Box\n      maxW=\"400px\"\n      m=\"0 auto\"\n      p={4}\n      borderWidth=\"1px\"\n      borderRadius=\"md\"\n      boxShadow=\"md\"\n      bgColor=\"white\"\n    >\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl isRequired isInvalid={errors.email}>\n          <FormLabel>Email</FormLabel>\n          <Input\n            {...register('email', { required: true })}\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n          <FormErrorMessage>\n            {errors.email && 'This field is required'}\n          </FormErrorMessage>\n        </FormControl>\n        <FormControl isRequired isInvalid={errors.password} mt={4}>\n          <FormLabel>Password</FormLabel>\n          <Input\n            {...register('password', { required: true, minLength: 7 })}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n          <FormErrorMessage>\n            {errors.password &&\n              'This field is required and should be at least 7 characters'}\n          </FormErrorMessage>\n        </FormControl>\n        <Button type=\"submit\" colorScheme=\"teal\" mt={4}>\n          Sign In\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_useForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","_jsx","Box","maxW","m","p","borderWidth","borderRadius","boxShadow","bgColor","children","_jsxs","onSubmit","data","loginThunk","FormControl","isRequired","isInvalid","email","FormLabel","Input","_objectSpread","required","type","placeholder","FormErrorMessage","password","mt","minLength","Button","colorScheme"],"sourceRoot":""}